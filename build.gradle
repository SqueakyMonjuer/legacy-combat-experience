plugins {
    id 'java'
    id "io.github.goooler.shadow" version "8.1.7"
}

def id = "Combat"
def group = 'com.ericlmao.combat'
def version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven { url 'https://jitpack.io' }

    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }

    maven { url = uri("https://maven.enginehub.org/repo/") }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    // alumina
    implementation("games.negative.alumina:alumina:3.2.1-SNAPSHOT")

    compileOnly("com.github.retrooper:packetevents-spigot:2.7.0")

    // ConfigLib
    implementation("de.exlll:configlib-yaml:4.5.0")

    // PlaceholderAPI
    compileOnly("me.clip:placeholderapi:2.11.6")

    // WorldGuard
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.13")

    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.32")
    annotationProcessor("org.projectlombok:lombok:1.18.32")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
}

shadowJar {
    archiveBaseName.set("${id}")
    archiveClassifier.set("")
    archiveVersion.set("")

    relocate "games.negative.alumina", "${group}.libs.alumina"
    relocate "de.exlll.configlib", "${group}.libs.config"
}
